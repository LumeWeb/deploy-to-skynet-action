"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _client = require("./client.js");

var _utils = require("./utils.js");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var defaultAddSkykeyOptions = _objectSpread({}, (0, _utils.defaultOptions)("/skynet/addskykey"));

var defaultCreateSkykeyOptions = _objectSpread({}, (0, _utils.defaultOptions)("/skynet/createskykey"));

var defaultGetSkykeyOptions = _objectSpread({}, (0, _utils.defaultOptions)("/skynet/skykey"));

var defaultGetSkykeysOptions = _objectSpread({}, (0, _utils.defaultOptions)("/skynet/skykeys"));

_client.SkynetClient.prototype.addSkykey = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(skykey) {
    var customOptions,
        _args = arguments;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            customOptions = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};
            throw new Error("Unimplemented");

          case 2:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}();

_client.SkynetClient.prototype.createSkykey = /*#__PURE__*/function () {
  var _ref2 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2(skykeyName, skykeyType) {
    var customOptions,
        _args2 = arguments;
    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            customOptions = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};
            throw new Error("Unimplemented");

          case 2:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));

  return function (_x2, _x3) {
    return _ref2.apply(this, arguments);
  };
}();

_client.SkynetClient.prototype.getSkykeyById = /*#__PURE__*/function () {
  var _ref3 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(skykeyId) {
    var customOptions,
        _args3 = arguments;
    return _regenerator["default"].wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            customOptions = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};
            throw new Error("Unimplemented");

          case 2:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));

  return function (_x4) {
    return _ref3.apply(this, arguments);
  };
}();

_client.SkynetClient.prototype.getSkykeyByName = /*#__PURE__*/function () {
  var _ref4 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4(skykeyName) {
    var customOptions,
        _args4 = arguments;
    return _regenerator["default"].wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            customOptions = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};
            throw new Error("Unimplemented");

          case 2:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));

  return function (_x5) {
    return _ref4.apply(this, arguments);
  };
}();

_client.SkynetClient.prototype.getSkykeys = /*#__PURE__*/function () {
  var _getSkykeys = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee5() {
    var customOptions,
        _args5 = arguments;
    return _regenerator["default"].wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            customOptions = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : {};
            throw new Error("Unimplemented");

          case 2:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5);
  }));

  function getSkykeys() {
    return _getSkykeys.apply(this, arguments);
  }

  return getSkykeys;
}();