"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SkynetClient = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _axios = _interopRequireDefault(require("axios"));

var _utils = require("./utils.js");

var SkynetClient = /*#__PURE__*/function () {
  /**
   * The Skynet Client which can be used to access Skynet.
   * @constructor
   * @param {string} [portalUrl="https://siasky.net"] - The portal URL to use to access Skynet, if specified. To use the default portal while passing custom options, use "".
   * @param {Object} [customOptions={}] - Configuration for the client.
   * @param {string} [customOptions.method] - HTTP method to use.
   * @param {string} [customOptions.APIKey] - Authentication password to use.
   * @param {string} [customOptions.customUserAgent=""] - Custom user agent header to set.
   * @param {Object} [customOptions.data=null] - Data to send in a POST.
   * @param {string} [customOptions.endpointPath=""] - The relative URL path of the portal endpoint to contact.
   * @param {string} [customOptions.extraPath=""] - Extra path element to append to the URL.
   * @param {Function} [customOptions.onUploadProgress] - Optional callback to track progress.
   * @param {Object} [customOptions.query={}] - Query parameters to include in the URl.
   */
  function SkynetClient() {
    var portalUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0, _utils.defaultPortalUrl)();
    var customOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    (0, _classCallCheck2["default"])(this, SkynetClient);
    this.portalUrl = portalUrl;
    this.customOptions = customOptions;
  }
  /**
   * Creates and executes a request.
   * @param {Object} config - Configuration for the request. See docs for constructor for the full list of options.
   */


  (0, _createClass2["default"])(SkynetClient, [{
    key: "executeRequest",
    value: function executeRequest(config) {
      var url = config.url;

      if (!url) {
        var _config$extraPath;

        url = (0, _utils.makeUrl)(this.portalUrl, config.endpointPath, (_config$extraPath = config.extraPath) !== null && _config$extraPath !== void 0 ? _config$extraPath : "");
        url = (0, _utils.addUrlQuery)(url, config.query);
      } // No other headers.


      var headers = config.customUserAgent && {
        "User-Agent": config.customUserAgent
      };
      return (0, _axios["default"])({
        url: url,
        method: config.method,
        data: config.data,
        headers: headers,
        auth: config.APIKey && {
          username: "",
          password: config.APIKey
        },
        onUploadProgress: config.onUploadProgress && function (_ref) {
          var loaded = _ref.loaded,
              total = _ref.total;
          var progress = loaded / total;
          config.onUploadProgress(progress, {
            loaded: loaded,
            total: total
          });
        }
      });
    }
  }]);
  return SkynetClient;
}();

exports.SkynetClient = SkynetClient;